<?xml version="1.0"?>
<ruleset name="MediaWiki">
	<file>.</file>
	<rule ref="./vendor/mediawiki/mediawiki-codesniffer/MediaWiki">
		<!-- This extension is intended to keep backward compatibility with PHP 5.2 -->
		<!-- 1. Keep long array syntax -->
		<exclude name="Generic.Arrays.DisallowLongArraySyntax.Found" />
		<!-- 2. Do not add typehints -->
		<exclude name="MediaWiki.Usage.PHPUnitTypeHints.MissingTypehint" />
		<!-- 3. Keep dirname( __FILE__ ) -->
		<exclude name="MediaWiki.Usage.DirUsage.FunctionFound" />

		<!-- Style preferences -->
		<!-- I find "catch( Exception $e ) {}" is quite clear -->
		<exclude name="Squiz.WhiteSpace.ScopeClosingBrace.ContentBefore" />
		<!-- I prefer to keep the possibility to put an "else" on a newline -->
		<exclude name="MediaWiki.ControlStructures.IfElseStructure.SpaceBeforeElse" />
		<!-- I don’t like "if ( true )", I prefer "if( true )" -->
		<exclude name="MediaWiki.WhiteSpace.SpaceAfterControlStructure.Incorrect" />
		<!-- Sometimes multiple blank lines can be better for readability of a long file -->
		<exclude name="MediaWiki.WhiteSpace.MultipleEmptyLines.MultipleEmptyLines" />
		<!-- I like when there are empty lines at the begin of a function, it’s less compact -->
		<exclude name="MediaWiki.WhiteSpace.DisallowEmptyLineFunctions.NoEmptyLine" />
		<!-- Sometimes spaces are used for exact alignment since tabs size is not universally aggreed -->
		<exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed" />
		<!-- Sometimes inline comments are legit (e.g. @codeCoverageIgnore) -->
		<exclude name="MediaWiki.WhiteSpace.SpaceBeforeSingleLineComment.NewLineComment" />
		<!-- Not be too strict about spaces between functions -->
		<exclude name="Squiz.WhiteSpace.FunctionSpacing.After" />
		<exclude name="Squiz.WhiteSpace.FunctionSpacing.Before" />

		<!-- Code hygiene -->
		<!-- TODO All remaining silenced errors are for inclusion of a optional PHP config file, improve and remove this rule. -->
		<exclude name="Generic.PHP.NoSilencedErrors.Discouraged" />

		<!-- DocBlock -->
		<!-- PHPDoc wants reference variables without the &, PHPCS prefers with &, former wins -->
		<exclude name="MediaWiki.Commenting.FunctionComment.ParamPassByReference" />
		<!-- I use custom tags -->
		<exclude name="MediaWiki.Commenting.FunctionAnnotations.UnrecognizedAnnotation" />

		<!-- Tests -->
		<!-- Keep @backupGlobals, it’s an additional check to improve quality -->
		<exclude name="MediaWiki.Commenting.PhpunitAnnotations.ForbiddenBackupGlobals" />
		<!-- TODO Do not use @expectedException, use $this->expectException(). -->
		<exclude name="MediaWiki.Commenting.PhpunitAnnotations.ForbiddenExpectedException" />
		<exclude name="MediaWiki.Commenting.PhpunitAnnotations.ForbiddenExpectedExceptionMessage" />

		<!-- Misc -->
		<!-- MediaWikiFarm is used as a prefix in all class names, but file names are too long -->
		<exclude name="MediaWiki.Files.ClassMatchesFilename.NotMatch" />
	</rule>

	<!-- Style preferences -->
	<!-- Lines should be less than 160 characters -->
	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="lineLimit" value="160" />
		</properties>
	</rule>
	<!-- I prefer the contrary: a space after a cast -->
	<rule ref="Generic.Formatting.SpaceAfterCast">
		<properties>
			<property name="spacing" value="1" />
		</properties>
	</rule>

	<rule ref="MediaWiki.NamingConventions.ValidGlobalName">
		<properties>
			<property name="ignoreList" type="array" value="$IP" />
		</properties>
	</rule>
	<arg name="encoding" value="utf8" />
	<arg name="extensions" value="php" />
	<exclude-pattern>tests/perfs/results</exclude-pattern>
	<exclude-pattern>vendor</exclude-pattern>
	<exclude-pattern>\.git</exclude-pattern>
</ruleset>
